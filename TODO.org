* TODO [5/7] Integration tests
:LOGBOOK:
CLOCK: [2021-02-28 Sun 01:01]--[2021-02-28 Sun 01:06] =>  0:05
CLOCK: [2021-02-27 Sat 23:09]--[2021-02-28 Sun 00:59] =>  1:50
:END:
- [-] add
  - [X] normal
  - [ ] add from playlist
  - [ ] add from playlist, removing videos from playlist
- [X] list
- [X] mark-watched
- [-] playlist
  - [ ] append
  - [ ] dedup
  - [X] list
  - [ ] remove
- [X] remove
- [X] stats
- [X] watch

Playlist-editing tests probably need to be based on creating a new
playlist, editing it, and then deleting it.

Or, perhaps, I should just log the requests and mock out the
responses.  Seems less likely to make YouTube upset.
* TODO Plain text format
* DONE Batch YouTube API requests
CLOSED: [2021-02-16 Tue 00:00]
:LOGBOOK:
CLOCK: [2021-02-15 Mon 22:45]--[2021-02-16 Tue 00:00] =>  1:15
CLOCK: [2021-02-09 Tue 22:05]--[2021-02-09 Tue 23:00] =>  0:55
:END:
* DONE Separate table for channel id -> channel name mapping
CLOSED: [2021-01-24 Sun 16:30]
* TODO Store JSON as blob for easy migrations and extensions
* TODO Record timestamp when video is added/watched
* DONE Use Caqti_async as database library
CLOSED: [2021-01-24 Sun 02:49]
:LOGBOOK:
CLOCK: [2021-01-22 Fri 16:15]--[2021-01-22 Fri 19:03] =>  2:48
:END:
[[https://paurkedal.github.io/ocaml-caqti/caqti-async/Caqti_async/module-type-CONNECTION/index.html][Caqti_async.Connection]] supports transactions and async operations.
* DONE Automatically refresh OAuth token when necessary
CLOSED: [2021-01-22 Fri 19:05]
* TODO Add custom user tags to database
Could be used as individual sublists to watch later
* DONE Set journaling mode to WAL
CLOSED: [2021-02-18 Thu 00:49]
* DONE Auto-generate schema file
CLOSED: [2021-02-18 Thu 00:29]
:LOGBOOK:
CLOCK: [2021-02-17 Wed 23:41]--[2021-02-18 Thu 00:29] =>  0:48
:END:
* TODO ETag-based caching
https://developers.google.com/youtube/v3/getting-started#etags
* TODO Only fetch partial JSON resource
https://developers.google.com/youtube/v3/getting-started#partial
